[
  {
    "objectID": "mini_project_three.html",
    "href": "mini_project_three.html",
    "title": "03 Mini Project",
    "section": "",
    "text": "You can download this qmd file here.\nThis project uses data on the beloved 2000s sitcom (and my personal favorite TV show), Gilmore Girls. This data set, found on Kaggle and accessed here, contains the full script from all seven seasons of the show.\nFirst, I clean the data, making a few different data frames for different text analysis purposes. To do so, I make use of multiple str_ functions: str_to_lower, str_view, str_replace_all, and str_to_title.\nThen, I use the bing sentiment application to analyze the positivity of the show as a whole. After removing the character names and stop words, I found the 10 most used positive words and the 10 most used negative words. Interestingly, positive words were used much more frequently than negative words, providing insight into the attitude of the show.\nNext, I used a similar application, the afinn application, to analyze the positivity of the five main characters in the show for each season. Generally, Luke tends to be the most negative character, whereas Sookie tends to be one of the most positive characters. From this analysis, we can also see how characters shift in positivity levels from season to season. I also used the data to make a word cloud of the 100 most commonly used words in the show. The word cloud demonstrates the casual language used by the characters and displays some Gilmore Girl classics like “coffee”, “mother”, and “Yale”.\nFinally, I wanted to run a text analysis to help further the contentious debate on which of Rory’s boyfriends was the best. First, I used the str_count function to count how many times Rory mentioned each of their names, perhaps indicating the length and importance of each relationship. Then, I plotted the mean positivity score (using the afinn application) for each boyfriend, providing evidence for which of them was the best fit. Was Dean the nicest? Did Logan treat Rory right? Was Jess all bad, or did he have a kind side? This plot will help answer some of these persisting questions."
  },
  {
    "objectID": "mini_project_three.html#the-show",
    "href": "mini_project_three.html#the-show",
    "title": "03 Mini Project",
    "section": "The Show",
    "text": "The Show\nIs Gilmore Girls truely a feel-good TV show, or does it have a dark side?\n\nbing_sentiments &lt;- get_sentiments(lexicon = \"bing\") #indicates positive/negative for each word\n\nbing_gilmore &lt;- gilmore_no_stop_names |&gt;\n  inner_join(bing_sentiments) |&gt;\n  count(sentiment, word, sort = TRUE) \n\nJoining with `by = join_by(word)`\n\n\nWarning in inner_join(gilmore_no_stop_names, bing_sentiments): Detected an unexpected many-to-many relationship between `x` and `y`.\nℹ Row 291827 of `x` matches multiple rows in `y`.\nℹ Row 2698 of `y` matches multiple rows in `x`.\nℹ If a many-to-many relationship is expected, set `relationship =\n  \"many-to-many\"` to silence this warning.\n\nbing_gilmore |&gt;\n  group_by(sentiment) |&gt;\n  summarize(count = sum(n))\n\n# A tibble: 2 × 2\n  sentiment count\n  &lt;chr&gt;     &lt;int&gt;\n1 negative  25515\n2 positive  29184\n\nbing_gilmore|&gt;\n  group_by(sentiment) |&gt;\n  slice_max(n, n = 10) |&gt; #10 most used positive and negative words\n  ungroup() |&gt;\n  ggplot(aes(x = fct_reorder(word, n), y = n, fill = sentiment)) +\n    geom_col() +  \n    coord_flip() +\n    facet_wrap(~ sentiment, scales = \"free\") +\n    labs(x = \"Count\",\n         y = \"Word\") +\n    scale_fill_brewer(palette = \"YlOrRd\", direction = -1) +\n    theme_classic()"
  },
  {
    "objectID": "mini_project_three.html#the-characters",
    "href": "mini_project_three.html#the-characters",
    "title": "03 Mini Project",
    "section": "The Characters",
    "text": "The Characters\nIs Emily the villain after all? Looks like Luke was the true downer!\n\nafinn_sentiments &lt;- get_sentiments(lexicon = \"afinn\") #gives each word a positivity score \n\ngilmore_no_stop_names |&gt;\n  inner_join(afinn_sentiments, relationship = \"many-to-many\") |&gt;\n  semi_join(gilmore_main_characters) |&gt; #takes only words from the main characters\n  mutate(character = str_to_title(character)) |&gt; #fourth str_function\n  group_by(character, season) |&gt;\n  summarize(mean_value = mean(value)) |&gt;\n  ungroup() |&gt;\n  ggplot(aes(x = character, y = mean_value, fill = character)) +\n    geom_col(show.legend = FALSE) +\n    facet_wrap(~season) +\n    coord_flip() +\n    scale_fill_brewer(palette = \"OrRd\") + #Fall color palette\n    theme_classic() +\n    labs(title = \"Positivity of Main Characters by Season\",\n       y = \"Positivity Score\",\n       x = \"Character\")\n\nJoining with `by = join_by(word)`\nJoining with `by = join_by(character)`\n`summarise()` has grouped output by 'character'. You can override using the\n`.groups` argument."
  },
  {
    "objectID": "mini_project_three.html#boyfriend-mentions",
    "href": "mini_project_three.html#boyfriend-mentions",
    "title": "03 Mini Project",
    "section": "Boyfriend Mentions",
    "text": "Boyfriend Mentions\nDid Rory have a favorite the whole time? Was she more excited to talk about one boyfriend compared to the others? It looks like Dean and Logan are separating themselves in the competition for best boyfriend!\n\ngilmore_girls_clean |&gt;\n  filter(character == \"rory\") |&gt;\n  summarize(jess_mentions = sum(str_count(word, \"^jess\")), #fifth str_function, thrid regular expression\n            logan_mentions = sum(str_count(word, \"^logan\")),\n            dean_mentions = sum(str_count(word, \"^dean\")))\n\n# A tibble: 1 × 3\n  jess_mentions logan_mentions dean_mentions\n          &lt;int&gt;          &lt;int&gt;         &lt;int&gt;\n1           147            283           311"
  },
  {
    "objectID": "mini_project_three.html#positivity-of-boyfriends",
    "href": "mini_project_three.html#positivity-of-boyfriends",
    "title": "03 Mini Project",
    "section": "Positivity of Boyfriends",
    "text": "Positivity of Boyfriends\nRory might have mention one boyfriend more than the others, but what about how they treated her? Dean and Logan continue to be great contenders for the title of Rory’s best boyfriend. Unfortunately, the results of this affin text analysis do not point to a decisive winner. Jess needs some defending, but it looks like the debate will continue.\n\ngilmore_no_stop_names |&gt;\n  inner_join(afinn_sentiments, relationship = \"many-to-many\") |&gt;\n  filter(character == c(\"jess\", \"dean\", \"logan\")) |&gt; #takes only words from rory's boyfriends\n  group_by(character) |&gt;\n  summarize(mean_value = mean(value)) |&gt;\n  ungroup() |&gt;\n  ggplot(aes(x = character, y = mean_value, fill = character)) +\n    geom_col(show.legend = FALSE) +\n    geom_text(aes(label = round(mean_value, 2)), vjust = -.5) +\n    scale_fill_brewer(palette = \"OrRd\") +\n    theme_classic() +\n    labs(title = \"Positivity of Rory's Boyfriends\",\n       y = \"Positivity Score\",\n       x = \"Character\") \n\nJoining with `by = join_by(word)`"
  },
  {
    "objectID": "tip_of_the_day.html",
    "href": "tip_of_the_day.html",
    "title": "R Tip of the Day",
    "section": "",
    "text": "This presentation on the wordcloud, wordcloud2, and emojifont packages can be downloaded here"
  },
  {
    "objectID": "tip_of_the_day.html#why-word-clouds",
    "href": "tip_of_the_day.html#why-word-clouds",
    "title": "R Tip of the Day",
    "section": "Why Word Clouds?",
    "text": "Why Word Clouds?\n\nWord clouds are useful tools when…\n\n-analyzing text data\n\n\n-presenting qualitative data\n\n\n-identifying key terms in texts\n\n\n-gathering survey/feedback data"
  },
  {
    "objectID": "tip_of_the_day.html#loading-the-required-packages",
    "href": "tip_of_the_day.html#loading-the-required-packages",
    "title": "R Tip of the Day",
    "section": "Loading the required packages",
    "text": "Loading the required packages\nlibrary(wordcloud)\nlibrary(RColorBrewer)\nlibrary(tidytext)\nlibrary(janeaustenr)"
  },
  {
    "objectID": "tip_of_the_day.html#data-wrangling",
    "href": "tip_of_the_day.html#data-wrangling",
    "title": "R Tip of the Day",
    "section": "Data wrangling",
    "text": "Data wrangling\ntidy_austen &lt;- all_austen |&gt;\n  unnest_tokens(output = \"word\", input = text) |&gt;\n  filter(chapter &gt; 0)\n\nemma_words &lt;- tidy_austen |&gt;\n  anti_join(stop_words, by = c(\"word\" = \"word\")) |&gt;\n  count(book, word, name = \"freq\") |&gt;\n  filter(book == \"Emma\") |&gt;\n  slice_max(order_by = freq, n = 200, with_ties = FALSE) |&gt;\n  mutate(freq = as.numeric(freq),\n         freq = freq/10) |&gt;\n  rename(\"words\" = \"word\") |&gt;\n  select(-book)"
  },
  {
    "objectID": "tip_of_the_day.html#data-wrangling-1",
    "href": "tip_of_the_day.html#data-wrangling-1",
    "title": "R Tip of the Day",
    "section": "Data wrangling",
    "text": "Data wrangling\ntidy_austen &lt;- all_austen |&gt;\n  unnest_tokens(output = \"word\", input = text) |&gt;\n  filter(chapter &gt; 0)\n\nemma_words &lt;- tidy_austen |&gt;\n  anti_join(stop_words, by = c(\"word\" = \"word\")) |&gt;\n  count(book, word, name = \"freq\") |&gt;\n  filter(book == \"Emma\") |&gt;\n  slice_max(order_by = freq, n = 200, with_ties = FALSE) |&gt;\n  mutate(freq = as.numeric(freq),\n         freq = freq/10) |&gt;\n  rename(\"words\" = \"word\") |&gt;\n  select(-book)"
  },
  {
    "objectID": "tip_of_the_day.html#making-the-cloud",
    "href": "tip_of_the_day.html#making-the-cloud",
    "title": "R Tip of the Day",
    "section": "Making the cloud",
    "text": "Making the cloud\nwith(emma_words, wordcloud(words = words, \n                               freq = freq, \n                               max.words = 100, \n                               min.freq = 0.5,\n                               scale = c(3, 1), \n                               random.order = FALSE\n\nlibrary(wordcloud)\nlibrary(RColorBrewer)\n\nwith(emma_words, wordcloud(words = words, \n                               freq = freq, \n                               max.words = 100, \n                               min.freq = 0.5,\n                               scale = c(3, 1), \n                               random.order = FALSE))"
  },
  {
    "objectID": "tip_of_the_day.html#adding-details",
    "href": "tip_of_the_day.html#adding-details",
    "title": "R Tip of the Day",
    "section": "Adding details",
    "text": "Adding details\npar(bg = \"black\")\n\nwith(emma_words, wordcloud(words = words, \n                               freq = freq, \n                               max.words = 50, \n                               min.freq = 0.5,\n                               scale = c(3, 1), \n                               random.order = FALSE,\n                               colors = brewer.pal(12, \"Set2\")))\n\npar(bg = \"black\")\n\nwith(emma_words, wordcloud(words = words, \n                               freq = freq, \n                               max.words = 50, \n                               min.freq = 0.5,\n                               scale = c(3, 1), \n                               random.order = FALSE,\n                               colors = brewer.pal(12, \"Set2\")))\n\nWarning in brewer.pal(12, \"Set2\"): n too large, allowed maximum for palette Set2 is 8\nReturning the palette you asked for with that many colors"
  },
  {
    "objectID": "tip_of_the_day.html#installing-wordcloud2",
    "href": "tip_of_the_day.html#installing-wordcloud2",
    "title": "R Tip of the Day",
    "section": "Installing Wordcloud2",
    "text": "Installing Wordcloud2\nrequire(devtools)\ninstall_github(\"lchiffon/wordcloud2\")\n\nlibrary(wordcloud2)"
  },
  {
    "objectID": "tip_of_the_day.html#making-the-cloud-1",
    "href": "tip_of_the_day.html#making-the-cloud-1",
    "title": "R Tip of the Day",
    "section": "Making the cloud",
    "text": "Making the cloud\nwordcloud2(data = emma_words,\n           color = \"random-dark\")\n\nrequire(devtools)\n\nLoading required package: devtools\n\n\nLoading required package: usethis\n\ninstall_github(\"lchiffon/wordcloud2\")\n\nUsing GitHub PAT from the git credential store.\n\n\nSkipping install of 'wordcloud2' from a github remote, the SHA1 (8a12a3b6) has not changed since last install.\n  Use `force = TRUE` to force installation\n\nlibrary(wordcloud2)\n\nwordcloud2(data = emma_words,\n           color = \"random-dark\")"
  },
  {
    "objectID": "tip_of_the_day.html#customization",
    "href": "tip_of_the_day.html#customization",
    "title": "R Tip of the Day",
    "section": "Customization",
    "text": "Customization\nwordcloud2(data = emma_words, \n           fontFamily = \"Futura\", \n           color = \"random-dark\",\n           backgroundColor = \"navy\",\n           shape = 'star')\n\nwordcloud2(data = emma_words, \n           size = 0.5,\n           fontFamily = \"Futura\", \n           color = \"random-light\",\n           backgroundColor = \"navyblue\",\n           shape = 'star')"
  },
  {
    "objectID": "tip_of_the_day.html#more-customization",
    "href": "tip_of_the_day.html#more-customization",
    "title": "R Tip of the Day",
    "section": "More Customization",
    "text": "More Customization\nletterCloud(emma_words, word = \"EMMA\", size = 0.75)"
  },
  {
    "objectID": "tip_of_the_day.html#emojifont-package",
    "href": "tip_of_the_day.html#emojifont-package",
    "title": "R Tip of the Day",
    "section": "Emojifont Package!",
    "text": "Emojifont Package!\nlibrary(emojifont)\nlibrary(palmerpenguins)\nlibrary(ggplot2)\n\npenguins_adelie &lt;- penguins |&gt;\n  filter(species == \"Adelie\") |&gt;\n  mutate(label = emoji(\"penguin\"),\n         type = sex)"
  },
  {
    "objectID": "tip_of_the_day.html#emojifont-package-1",
    "href": "tip_of_the_day.html#emojifont-package-1",
    "title": "R Tip of the Day",
    "section": "Emojifont Package!",
    "text": "Emojifont Package!\npenguins_adelie |&gt;\nggplot(aes(x = body_mass_g, y = flipper_length_mm)) +\n  geom_text(aes(color = type, label = label), family = \"EmojiOne\", size = 6) +\n  geom_smooth(method = lm, se = FALSE, size = 0.2, color = \"black\") +\n  scale_color_manual(values = c(\"female\" = \"pink\", \"male\" = \"blue\", \"NA\" = \"black\")) +\n  labs(title = \"As body mass increases, \\nflipper length also increases\",\n       subtitle = paste0(\"For Adelie penguins\"),\n       x = \"Body Mass\",\n       y = \"Flipper Length\",\n       color = \"Sex\") +\n  theme_classic() +\n  theme(legend.position = \"none\")"
  },
  {
    "objectID": "tip_of_the_day.html#emojifont-package-2",
    "href": "tip_of_the_day.html#emojifont-package-2",
    "title": "R Tip of the Day",
    "section": "Emojifont Package!",
    "text": "Emojifont Package!\n\nlibrary(emojifont)\nlibrary(palmerpenguins)\nlibrary(ggplot2)\nlibrary(tidyverse)\nlibrary(dplyr)\n\npenguins &lt;- penguins\n\n\npenguins_adelie &lt;- penguins |&gt;\n  filter(species == \"Adelie\") |&gt;\n  mutate(label = emoji(\"penguin\"),\n         type = sex)\n\npenguins_adelie |&gt;\nggplot(aes(x = body_mass_g, y = flipper_length_mm)) +\n  geom_text(aes(color = type, label = label), family = \"EmojiOne\", size = 6) +\n  geom_smooth(method = lm, se = FALSE, size = 0.2, color = \"black\") +\n  scale_color_manual(values = c(\"female\" = \"deeppink3\", \"male\" = \"deepskyblue4\", \"NA\" = \"black\")) +\n  labs(title = \"As Body Mass Increases, \\nFlipper Length Also Increases\",\n       subtitle = paste0(\"For the Adelie Species\"),\n       x = \"Body Mass\",\n       y = \"Flipper Length\",\n       color = \"Sex\") +\n  theme_classic() +\n  theme(legend.position = \"none\")\n\nWarning: Using `size` aesthetic for lines was deprecated in ggplot2 3.4.0.\nℹ Please use `linewidth` instead.\n\n\n`geom_smooth()` using formula = 'y ~ x'\n\n\nWarning: Removed 1 row containing non-finite outside the scale range\n(`stat_smooth()`).\n\n\nWarning: Removed 1 row containing missing values or values outside the scale range\n(`geom_text()`)."
  },
  {
    "objectID": "tip_of_the_day.html#sources",
    "href": "tip_of_the_day.html#sources",
    "title": "R Tip of the Day",
    "section": "Sources",
    "text": "Sources\n\nWordcloud2 Issue\nR Graph Gallery - Colors\nGlowbl Word Cloud Guide\nWordcloud2 LetterCloud Function\nQuarto Presentation Example"
  },
  {
    "objectID": "tip_of_the_day.html#souces-continued",
    "href": "tip_of_the_day.html#souces-continued",
    "title": "R Tip of the Day",
    "section": "Souces (Continued)",
    "text": "Souces (Continued)\n\nUsing Emoji Fonts in R\nWordcloud2 Introduction\nAn Introduction to the Emojifont Package\nR Graph Gallery - Wordcloud"
  },
  {
    "objectID": "final_project.html",
    "href": "final_project.html",
    "title": "Final Project",
    "section": "",
    "text": "Check out my final project at this link. It was built to be a tool for high-schoolers looking to go to a Minnesota college or university. It might take a second to load, so don’t worry if it doesn’t pop up right away."
  },
  {
    "objectID": "about_me.html",
    "href": "about_me.html",
    "title": "About Me!",
    "section": "",
    "text": "On campus, I stay busy as a member of the Women’s Golf Team and as the Student-Alumni Liaison in Student Government Association.\nFor golf, we compete in the fall and the spring, playing tournaments each weekend during our season. We practice everyday while competing and three times during the winter. We also lift at 7AM every Tuesday and Thursday. I also stay involved in Ole Athletics as a member of Ole Leadership Academy and the Student Athletics Advisory Board.\nIn SGA, I am currently serving my second term as the Student-Alumni Liaison. Through my role, I meet regularly with the Alumni and Parent Relations Office, attend weekly Student Senate meetings, serve as the student representative on the Alumni and Family Board. This year, I have had the privilege to attend alumni events on campus, in Minneapolis, and in Washington DC! If you have any ideas on how to get students and alumni connected, please let me know! Additionally, I was a part of the Student Affairs Committee project titled “Pressure and Success: A Collection of Student Perspectives.” The project was presented to the St. Olaf Board of Regents and shared with the Piper Center for Vocation and Career, challenging the college to think critically about their messaging and student support regarding success.\n\n\n\n\n\n\n\n\n\n\n\n\nTaken at the 150th Celebration of St. Olaf College in Minneapolis, Minnesota.\n\nFinally, I stay active in the Economics Department by working as a Teaching Assistant. I have been a TA for both Macroeconomic Theory and Microeconomic Theory, and enjoy getting to develop relationships with my professors!"
  },
  {
    "objectID": "about_me.html#on-the-hill",
    "href": "about_me.html#on-the-hill",
    "title": "About Me!",
    "section": "",
    "text": "On campus, I stay busy as a member of the Women’s Golf Team and as the Student-Alumni Liaison in Student Government Association.\nFor golf, we compete in the fall and the spring, playing tournaments each weekend during our season. We practice everyday while competing and three times during the winter. We also lift at 7AM every Tuesday and Thursday. I also stay involved in Ole Athletics as a member of Ole Leadership Academy and the Student Athletics Advisory Board.\nIn SGA, I am currently serving my second term as the Student-Alumni Liaison. Through my role, I meet regularly with the Alumni and Parent Relations Office, attend weekly Student Senate meetings, serve as the student representative on the Alumni and Family Board. This year, I have had the privilege to attend alumni events on campus, in Minneapolis, and in Washington DC! If you have any ideas on how to get students and alumni connected, please let me know! Additionally, I was a part of the Student Affairs Committee project titled “Pressure and Success: A Collection of Student Perspectives.” The project was presented to the St. Olaf Board of Regents and shared with the Piper Center for Vocation and Career, challenging the college to think critically about their messaging and student support regarding success.\n\n\n\n\n\n\n\n\n\n\n\n\nTaken at the 150th Celebration of St. Olaf College in Minneapolis, Minnesota.\n\nFinally, I stay active in the Economics Department by working as a Teaching Assistant. I have been a TA for both Macroeconomic Theory and Microeconomic Theory, and enjoy getting to develop relationships with my professors!"
  },
  {
    "objectID": "about_me.html#off-the-hill",
    "href": "about_me.html#off-the-hill",
    "title": "About Me!",
    "section": "Off the Hill",
    "text": "Off the Hill\nBeyond school, my family is my largest priority. I love seeing my parents whenever I can, and I visit my sister, Bergen, in DC as often as possible. As a family, we love to travel together, play pickle ball, hit the golf course, and go on bike rides. Bergen and I have recently discovered running, and we are addicted! We are currently looking forward to running our first half-marathon together this summer in LA."
  },
  {
    "objectID": "mini_project_two.html",
    "href": "mini_project_two.html",
    "title": "02 Mini Project",
    "section": "",
    "text": "This project was completed with Ela Kanade, and Morgan Ryan. You can download this qmd file here.\nAs college students, we were interested in data on colleges and universities in Minnesota and the surrounding states. As the “enrollment cliff” nears, questions regarding higher education are particularly interesting. We were curious about how many schools are in the state, the size of the schools, and any other variables that provide college-level information. We wanted to investigate this college-wide data in hopes of building a better picture of what further education in Minnesota looks like. Additionally, we were curious about how schools in the Minnesota Intercollegiate Athletic Conference (MIAC) may differ from schools that are not in the MIAC.\nWe used the table scraping approach to get data from the Wikipedia page “List of Colleges and Universities in Minnesota”. Additionally, we collected data on MIAC schools using the same approach from the Wikipedia page “Minnesota Intercollegiate Athletic Conference”.\nWe cleaned our data and renamed our column names to see the different nuances in this dataset, excluding the defunct institutions, and only focusing on the current, operating colleges in the area. We decided to make a tibble of all schools and a tibble of schools that are not in the MIAC to see if indicators like enrollment or whether the school is public or private differ. This would help us understand how MIAC schools differ from non-MIAC schools.\nUsing the polite package, we confirmed that we were scraping the data ethically and responsibly and following good web scraping practices. Before we scraped it, we also made sure we were complying with the website’s terms of service.\nAfter scraping and tidying our data, we could easily view the geographic location of each college by making a map (after finding the latitude and longitude for each). Additionally, we could visualize our data in numerous ways. For example, we could make a bar chart of average enrollment with bins for each institution type.\nOur data acquisition coding is below!\n\n\n\n#combine steps using bow and scrape\nsession &lt;- bow(\"https://en.wikipedia.org/wiki/List_of_colleges_and_universities_in_Minnesota\", force = TRUE) \n\nresult &lt;- scrape(session) |&gt;\n  html_nodes(css = \"table\") |&gt; \n  html_table(header = TRUE, fill = TRUE)\n\nmn_data2 &lt;- result[[2]] #scrape the correct table and name it mn_data2\n\nprint(mn_data2, n = 10) \n\n# A tibble: 74 × 6\n   Institution                    `Location(s)` `Control[note 1]` `Type[note 2]`\n   &lt;chr&gt;                          &lt;chr&gt;         &lt;chr&gt;             &lt;chr&gt;         \n 1 Alexandria Technical and Comm… Alexandria    Public            Associate's c…\n 2 Anoka Technical College        Anoka         Public            Associate's c…\n 3 Anoka-Ramsey Community College Coon Rapids,… Public            Associate's c…\n 4 Bemidji State University       Bemidji       Public            Master's univ…\n 5 Central Lakes College          Brainerd, St… Public            Associate's c…\n 6 Century College                White Bear L… Public            Associate's c…\n 7 Dakota County Technical Colle… Rosemount     Public            Associate's c…\n 8 Fond du Lac Tribal and Commun… Cloquet       Public            Tribal college\n 9 Hennepin Technical College     Brooklyn Par… Public            Associate's c…\n10 Minnesota North College        Hibbing, Ita… Public            Associate's c…\n# ℹ 64 more rows\n# ℹ 2 more variables: `Enrollment[14](fall 2023)` &lt;chr&gt;, Founded &lt;chr&gt;\n\n\n\n#clean the table and name it mn_colleges\nmn_colleges &lt;- mn_data2 |&gt;\n  clean_names() |&gt;\n  rename(\n    locations = location_s,\n    public_private = control_note_1,\n    type = type_note_2,\n    enrollment = enrollment_14_fall_2023,\n    date_founded = founded\n  ) |&gt;\n  mutate(enrollment = parse_number(enrollment))\n\nprint(mn_colleges, n = 10) \n\n# A tibble: 74 × 6\n   institution            locations public_private type  enrollment date_founded\n   &lt;chr&gt;                  &lt;chr&gt;     &lt;chr&gt;          &lt;chr&gt;      &lt;dbl&gt; &lt;chr&gt;       \n 1 Alexandria Technical … Alexandr… Public         Asso…       2865 1961[15]    \n 2 Anoka Technical Colle… Anoka     Public         Asso…       1580 1967[16]    \n 3 Anoka-Ramsey Communit… Coon Rap… Public         Asso…       7902 1965[17]    \n 4 Bemidji State Univers… Bemidji   Public         Mast…       4023 1919[18]    \n 5 Central Lakes College  Brainerd… Public         Asso…       4633 1938[19]    \n 6 Century College        White Be… Public         Asso…       7646 1967[20]    \n 7 Dakota County Technic… Rosemount Public         Asso…       2717 1970[21]    \n 8 Fond du Lac Tribal an… Cloquet   Public         Trib…       1648 1987[22]    \n 9 Hennepin Technical Co… Brooklyn… Public         Asso…       3974 1972[23]    \n10 Minnesota North Colle… Hibbing,… Public         Asso…       3044 1916[24]    \n# ℹ 64 more rows\n\n\n\n\n\n\n#bow and scrape data\nsession &lt;- bow(\"https://en.wikipedia.org/wiki/Minnesota_Intercollegiate_Athletic_Conference\", force = TRUE)\n\nmiac_result &lt;- scrape(session) |&gt;\n  html_nodes(css = \"table\") |&gt; \n  html_table(header = TRUE, fill = TRUE)\n\n#begin cleaning miac data\nmiac_data1 &lt;- miac_result[[2]] |&gt;\n  clean_names() \n\nmiac_data1 &lt;- miac_data1 |&gt;\n  select(institution) |&gt;\n  mutate(\n    #fixing name consistency\n    institution = str_trim(str_replace(institution, \"\\\\[.*\\\\]\", \"\"), side = \"right\"),\n    institution = str_trim(str_replace(institution, \"Mary's University\", \"Mary's University of Minnesota\"), side = \"right\") \n  )\n\nmiac_data1\n\n# A tibble: 13 × 1\n   institution                         \n   &lt;chr&gt;                               \n 1 Augsburg University                 \n 2 Bethel University                   \n 3 Carleton College                    \n 4 Concordia College                   \n 5 Gustavus Adolphus College           \n 6 Hamline University                  \n 7 Macalester College                  \n 8 College of Saint Benedict           \n 9 St. Catherine University            \n10 Saint John's University             \n11 Saint Mary's University of Minnesota\n12 St. Olaf College                    \n13 College of St. Scholastica          \n\nmiac_list &lt;- as.list(miac_data1$institution) #turn miac_data into a list for the function below\nmiac_list\n\n[[1]]\n[1] \"Augsburg University\"\n\n[[2]]\n[1] \"Bethel University\"\n\n[[3]]\n[1] \"Carleton College\"\n\n[[4]]\n[1] \"Concordia College\"\n\n[[5]]\n[1] \"Gustavus Adolphus College\"\n\n[[6]]\n[1] \"Hamline University\"\n\n[[7]]\n[1] \"Macalester College\"\n\n[[8]]\n[1] \"College of Saint Benedict\"\n\n[[9]]\n[1] \"St. Catherine University\"\n\n[[10]]\n[1] \"Saint John's University\"\n\n[[11]]\n[1] \"Saint Mary's University of Minnesota\"\n\n[[12]]\n[1] \"St. Olaf College\"\n\n[[13]]\n[1] \"College of St. Scholastica\"\n\n\n\n#creating function to look for MN colleges who aren't in the miac\nnot_in_miac &lt;- function(college_list) {\n  not_matched &lt;- vector()\n  for(i in college_list){\n    if(!(i %in% miac_list)) {\n      not_matched &lt;- c(not_matched, i)\n    }\n  }\n  not_matched\n}\n\ntest &lt;- as_tibble(not_in_miac(mn_list)) #make a tibble of non_miac schools\n\n\nnon_miac_colleges &lt;- test |&gt;\n  left_join(mn_colleges, by = join_by(value == institution)) #left_join to end with a tibble of full college data for only non-miac schools\n\nslice_head(non_miac_colleges, n = 10)\n\n# A tibble: 10 × 6\n   value                  locations public_private type  enrollment date_founded\n   &lt;chr&gt;                  &lt;chr&gt;     &lt;chr&gt;          &lt;chr&gt;      &lt;dbl&gt; &lt;chr&gt;       \n 1 Alexandria Technical … Alexandr… Public         Asso…       2865 1961[15]    \n 2 Anoka Technical Colle… Anoka     Public         Asso…       1580 1967[16]    \n 3 Anoka-Ramsey Communit… Coon Rap… Public         Asso…       7902 1965[17]    \n 4 Bemidji State Univers… Bemidji   Public         Mast…       4023 1919[18]    \n 5 Central Lakes College  Brainerd… Public         Asso…       4633 1938[19]    \n 6 Century College        White Be… Public         Asso…       7646 1967[20]    \n 7 Dakota County Technic… Rosemount Public         Asso…       2717 1970[21]    \n 8 Fond du Lac Tribal an… Cloquet   Public         Trib…       1648 1987[22]    \n 9 Hennepin Technical Co… Brooklyn… Public         Asso…       3974 1972[23]    \n10 Minnesota North Colle… Hibbing,… Public         Asso…       3044 1916[24]    \n\nslice_head(mn_colleges, n = 10)\n\n# A tibble: 10 × 6\n   institution            locations public_private type  enrollment date_founded\n   &lt;chr&gt;                  &lt;chr&gt;     &lt;chr&gt;          &lt;chr&gt;      &lt;dbl&gt; &lt;chr&gt;       \n 1 Alexandria Technical … Alexandr… Public         Asso…       2865 1961[15]    \n 2 Anoka Technical Colle… Anoka     Public         Asso…       1580 1967[16]    \n 3 Anoka-Ramsey Communit… Coon Rap… Public         Asso…       7902 1965[17]    \n 4 Bemidji State Univers… Bemidji   Public         Mast…       4023 1919[18]    \n 5 Central Lakes College  Brainerd… Public         Asso…       4633 1938[19]    \n 6 Century College        White Be… Public         Asso…       7646 1967[20]    \n 7 Dakota County Technic… Rosemount Public         Asso…       2717 1970[21]    \n 8 Fond du Lac Tribal an… Cloquet   Public         Trib…       1648 1987[22]    \n 9 Hennepin Technical Co… Brooklyn… Public         Asso…       3974 1972[23]    \n10 Minnesota North Colle… Hibbing,… Public         Asso…       3044 1916[24]"
  },
  {
    "objectID": "mini_project_two.html#mn-collegesuniversities",
    "href": "mini_project_two.html#mn-collegesuniversities",
    "title": "02 Mini Project",
    "section": "",
    "text": "#combine steps using bow and scrape\nsession &lt;- bow(\"https://en.wikipedia.org/wiki/List_of_colleges_and_universities_in_Minnesota\", force = TRUE) \n\nresult &lt;- scrape(session) |&gt;\n  html_nodes(css = \"table\") |&gt; \n  html_table(header = TRUE, fill = TRUE)\n\nmn_data2 &lt;- result[[2]] #scrape the correct table and name it mn_data2\n\nprint(mn_data2, n = 10) \n\n# A tibble: 74 × 6\n   Institution                    `Location(s)` `Control[note 1]` `Type[note 2]`\n   &lt;chr&gt;                          &lt;chr&gt;         &lt;chr&gt;             &lt;chr&gt;         \n 1 Alexandria Technical and Comm… Alexandria    Public            Associate's c…\n 2 Anoka Technical College        Anoka         Public            Associate's c…\n 3 Anoka-Ramsey Community College Coon Rapids,… Public            Associate's c…\n 4 Bemidji State University       Bemidji       Public            Master's univ…\n 5 Central Lakes College          Brainerd, St… Public            Associate's c…\n 6 Century College                White Bear L… Public            Associate's c…\n 7 Dakota County Technical Colle… Rosemount     Public            Associate's c…\n 8 Fond du Lac Tribal and Commun… Cloquet       Public            Tribal college\n 9 Hennepin Technical College     Brooklyn Par… Public            Associate's c…\n10 Minnesota North College        Hibbing, Ita… Public            Associate's c…\n# ℹ 64 more rows\n# ℹ 2 more variables: `Enrollment[14](fall 2023)` &lt;chr&gt;, Founded &lt;chr&gt;\n\n\n\n#clean the table and name it mn_colleges\nmn_colleges &lt;- mn_data2 |&gt;\n  clean_names() |&gt;\n  rename(\n    locations = location_s,\n    public_private = control_note_1,\n    type = type_note_2,\n    enrollment = enrollment_14_fall_2023,\n    date_founded = founded\n  ) |&gt;\n  mutate(enrollment = parse_number(enrollment))\n\nprint(mn_colleges, n = 10) \n\n# A tibble: 74 × 6\n   institution            locations public_private type  enrollment date_founded\n   &lt;chr&gt;                  &lt;chr&gt;     &lt;chr&gt;          &lt;chr&gt;      &lt;dbl&gt; &lt;chr&gt;       \n 1 Alexandria Technical … Alexandr… Public         Asso…       2865 1961[15]    \n 2 Anoka Technical Colle… Anoka     Public         Asso…       1580 1967[16]    \n 3 Anoka-Ramsey Communit… Coon Rap… Public         Asso…       7902 1965[17]    \n 4 Bemidji State Univers… Bemidji   Public         Mast…       4023 1919[18]    \n 5 Central Lakes College  Brainerd… Public         Asso…       4633 1938[19]    \n 6 Century College        White Be… Public         Asso…       7646 1967[20]    \n 7 Dakota County Technic… Rosemount Public         Asso…       2717 1970[21]    \n 8 Fond du Lac Tribal an… Cloquet   Public         Trib…       1648 1987[22]    \n 9 Hennepin Technical Co… Brooklyn… Public         Asso…       3974 1972[23]    \n10 Minnesota North Colle… Hibbing,… Public         Asso…       3044 1916[24]    \n# ℹ 64 more rows"
  },
  {
    "objectID": "mini_project_two.html#miac-conference",
    "href": "mini_project_two.html#miac-conference",
    "title": "02 Mini Project",
    "section": "",
    "text": "#bow and scrape data\nsession &lt;- bow(\"https://en.wikipedia.org/wiki/Minnesota_Intercollegiate_Athletic_Conference\", force = TRUE)\n\nmiac_result &lt;- scrape(session) |&gt;\n  html_nodes(css = \"table\") |&gt; \n  html_table(header = TRUE, fill = TRUE)\n\n#begin cleaning miac data\nmiac_data1 &lt;- miac_result[[2]] |&gt;\n  clean_names() \n\nmiac_data1 &lt;- miac_data1 |&gt;\n  select(institution) |&gt;\n  mutate(\n    #fixing name consistency\n    institution = str_trim(str_replace(institution, \"\\\\[.*\\\\]\", \"\"), side = \"right\"),\n    institution = str_trim(str_replace(institution, \"Mary's University\", \"Mary's University of Minnesota\"), side = \"right\") \n  )\n\nmiac_data1\n\n# A tibble: 13 × 1\n   institution                         \n   &lt;chr&gt;                               \n 1 Augsburg University                 \n 2 Bethel University                   \n 3 Carleton College                    \n 4 Concordia College                   \n 5 Gustavus Adolphus College           \n 6 Hamline University                  \n 7 Macalester College                  \n 8 College of Saint Benedict           \n 9 St. Catherine University            \n10 Saint John's University             \n11 Saint Mary's University of Minnesota\n12 St. Olaf College                    \n13 College of St. Scholastica          \n\nmiac_list &lt;- as.list(miac_data1$institution) #turn miac_data into a list for the function below\nmiac_list\n\n[[1]]\n[1] \"Augsburg University\"\n\n[[2]]\n[1] \"Bethel University\"\n\n[[3]]\n[1] \"Carleton College\"\n\n[[4]]\n[1] \"Concordia College\"\n\n[[5]]\n[1] \"Gustavus Adolphus College\"\n\n[[6]]\n[1] \"Hamline University\"\n\n[[7]]\n[1] \"Macalester College\"\n\n[[8]]\n[1] \"College of Saint Benedict\"\n\n[[9]]\n[1] \"St. Catherine University\"\n\n[[10]]\n[1] \"Saint John's University\"\n\n[[11]]\n[1] \"Saint Mary's University of Minnesota\"\n\n[[12]]\n[1] \"St. Olaf College\"\n\n[[13]]\n[1] \"College of St. Scholastica\"\n\n\n\n#creating function to look for MN colleges who aren't in the miac\nnot_in_miac &lt;- function(college_list) {\n  not_matched &lt;- vector()\n  for(i in college_list){\n    if(!(i %in% miac_list)) {\n      not_matched &lt;- c(not_matched, i)\n    }\n  }\n  not_matched\n}\n\ntest &lt;- as_tibble(not_in_miac(mn_list)) #make a tibble of non_miac schools\n\n\nnon_miac_colleges &lt;- test |&gt;\n  left_join(mn_colleges, by = join_by(value == institution)) #left_join to end with a tibble of full college data for only non-miac schools\n\nslice_head(non_miac_colleges, n = 10)\n\n# A tibble: 10 × 6\n   value                  locations public_private type  enrollment date_founded\n   &lt;chr&gt;                  &lt;chr&gt;     &lt;chr&gt;          &lt;chr&gt;      &lt;dbl&gt; &lt;chr&gt;       \n 1 Alexandria Technical … Alexandr… Public         Asso…       2865 1961[15]    \n 2 Anoka Technical Colle… Anoka     Public         Asso…       1580 1967[16]    \n 3 Anoka-Ramsey Communit… Coon Rap… Public         Asso…       7902 1965[17]    \n 4 Bemidji State Univers… Bemidji   Public         Mast…       4023 1919[18]    \n 5 Central Lakes College  Brainerd… Public         Asso…       4633 1938[19]    \n 6 Century College        White Be… Public         Asso…       7646 1967[20]    \n 7 Dakota County Technic… Rosemount Public         Asso…       2717 1970[21]    \n 8 Fond du Lac Tribal an… Cloquet   Public         Trib…       1648 1987[22]    \n 9 Hennepin Technical Co… Brooklyn… Public         Asso…       3974 1972[23]    \n10 Minnesota North Colle… Hibbing,… Public         Asso…       3044 1916[24]    \n\nslice_head(mn_colleges, n = 10)\n\n# A tibble: 10 × 6\n   institution            locations public_private type  enrollment date_founded\n   &lt;chr&gt;                  &lt;chr&gt;     &lt;chr&gt;          &lt;chr&gt;      &lt;dbl&gt; &lt;chr&gt;       \n 1 Alexandria Technical … Alexandr… Public         Asso…       2865 1961[15]    \n 2 Anoka Technical Colle… Anoka     Public         Asso…       1580 1967[16]    \n 3 Anoka-Ramsey Communit… Coon Rap… Public         Asso…       7902 1965[17]    \n 4 Bemidji State Univers… Bemidji   Public         Mast…       4023 1919[18]    \n 5 Central Lakes College  Brainerd… Public         Asso…       4633 1938[19]    \n 6 Century College        White Be… Public         Asso…       7646 1967[20]    \n 7 Dakota County Technic… Rosemount Public         Asso…       2717 1970[21]    \n 8 Fond du Lac Tribal an… Cloquet   Public         Trib…       1648 1987[22]    \n 9 Hennepin Technical Co… Brooklyn… Public         Asso…       3974 1972[23]    \n10 Minnesota North Colle… Hibbing,… Public         Asso…       3044 1916[24]"
  },
  {
    "objectID": "index.html",
    "href": "index.html",
    "title": "Solveig Senf",
    "section": "",
    "text": "Hi! I’m Solveig! I am a rising junior at St. Olaf College studying Quantitative Economics and Religion with a concentration in Statistics and Data Science. Here you can learn a little bit more about me and explore my work from Data Science 2."
  },
  {
    "objectID": "mini_project_one.html",
    "href": "mini_project_one.html",
    "title": "01 Mini Project",
    "section": "",
    "text": "You can download this qmd file here.\nThis project features three maps (a static and interactive version of the same variable and a single static map of different variable) that display data from the Centers for Disease Control and Prevention (CDC). Data on Covid-19 levels was collected from February 2022 to May 2023 on a county level. This project displays data recorded on May 11, 2023. For the purposes of this state-level project, I will use the average of county-level data for each state to display Covid-19 cases per 100k. Data can be accessed here.\nAdditionally, this project contains two maps (a static and interactive version) that display the 2024 Presidential Election results. Election data is from the Federal Election Commission (FEC) and can be found here.\nThe code for the maps is below!\n\n\n\nlibrary(tidyverse)\n\n── Attaching core tidyverse packages ──────────────────────── tidyverse 2.0.0 ──\n✔ dplyr     1.1.4     ✔ readr     2.1.5\n✔ forcats   1.0.0     ✔ stringr   1.5.1\n✔ ggplot2   3.5.1     ✔ tibble    3.2.1\n✔ lubridate 1.9.4     ✔ tidyr     1.3.1\n✔ purrr     1.0.4     \n── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──\n✖ dplyr::filter() masks stats::filter()\n✖ dplyr::lag()    masks stats::lag()\nℹ Use the conflicted package (&lt;http://conflicted.r-lib.org/&gt;) to force all conflicts to become errors\n\nlibrary(mdsr)\nlibrary(maps)\n\n\nAttaching package: 'maps'\n\nThe following object is masked from 'package:purrr':\n\n    map\n\nlibrary(viridis)\n\nLoading required package: viridisLite\n\nAttaching package: 'viridis'\n\nThe following object is masked from 'package:maps':\n\n    unemp\n\nlibrary(lubridate)\nlibrary(leaflet)\nlibrary(sf)\n\nLinking to GEOS 3.11.0, GDAL 3.5.3, PROJ 9.1.0; sf_use_s2() is TRUE\n\nlibrary(RColorBrewer)\n\n#data set from the CDC\ncdc_data &lt;- read.csv(\"~/Downloads/CLASSES/SDS264/01_United_States_COVID-19_Community_Levels_by_County_20250216.csv\")\n\n\nstates_polygon &lt;- as_tibble(map_data(\"state\")) |&gt;\n  select(region, group, order, lat, long)\n\nstates_sf &lt;- read_sf(\"https://rstudio.github.io/leaflet/json/us-states.geojson\") |&gt;\n  select(name, geometry)\n\n\n#join covid data with map data\ncovid_map &lt;- covid_state_level_data |&gt;\n  right_join(states_polygon, by =c(\"state\" = \"region\"))\n\ncovid_map &lt;- covid_map |&gt;\n  right_join(states_sf, by =c(\"state\" = \"name\"))\n\n\n\n\ncovid_map |&gt;\n  ggplot(mapping = aes(x = long, y = lat,\n                       group = group)) +\n  geom_polygon(aes(fill = covid_cases_per_100k), color = \"white\", linewidth = 0.2) +\n  labs(fill = \"Average Covid Cases \\nin Per 100k\",\n       x = \"\",\n       y = \"\") +\n  coord_map() +\n  theme_void() +\n  scale_fill_viridis(option = \"mako\", direction = -1)\n\n\n\n\n\n\n\n\n\n\n\n\nstates &lt;- read_sf(\"https://rstudio.github.io/leaflet/json/us-states.geojson\") \nclass(states)\n\n[1] \"sf\"         \"tbl_df\"     \"tbl\"        \"data.frame\"\n\nstates &lt;- states |&gt;\n  mutate(name = str_to_lower(name),\n         name = str_replace_all(name, \" \", \"\"))\n\n\n\n\n\n\n\n\n\n\n\nbins &lt;- c(0, 10, 20, 30, 40, 50, 60, 70, Inf)\npal &lt;- colorBin(\"Blues\", domain = state_plotting_covid_sf$covid_cases_per_100k, bins = bins)\n\nlibrary(htmltools)\nlibrary(glue)\n\nstr(state_plotting_covid_sf$covid_cases_per_100k)\n\n num [1:50] 27.5 61.9 22.7 28 20.4 ...\n\n#add labels to the state_plotting_covid_sf\nstate_plotting_sf_labels &lt;- state_plotting_covid_sf |&gt;\n  mutate(labels = str_c(state, \": \", format(round(covid_cases_per_100k, 1)), \" cases / 100k people\"))\n\nlabels &lt;- lapply(state_plotting_sf_labels$labels, HTML)\n\nstate_plotting_covid_sf &lt;- st_as_sf(state_plotting_covid_sf)\n\nleaflet(state_plotting_covid_sf) |&gt;\n  setView(-100, 42, 3.5) |&gt; #to view the united states\n  addTiles() |&gt;\n  addPolygons(\n    fillColor = ~pal(covid_cases_per_100k),\n    weight = 1,\n    opacity = 2,\n    color = \"black\",\n    dashArray = \"2\",\n    fillOpacity = 0.7,\n    highlightOptions = highlightOptions(\n      weight = 2,\n      color = \"#FFFFFF\",\n      dashArray = \"\",\n      fillOpacity = 0.7,\n      bringToFront = TRUE),\n    label = labels,\n    labelOptions = labelOptions(\n      style = list(\"font-weight\" = \"normal\", padding = \"3px 8px\"),\n      textsize = \"15px\",\n      direction = \"auto\")) |&gt;\n  addLegend(pal = pal, values = ~covid_cases_per_100k, opacity = 0.7, title = \"Cases per 100k\",\n    position = \"topright\")\n\n\n\n\n\n\n\n\n\ncounty_map &lt;- map_data(\"county\") |&gt;\n  mutate(subregion = str_to_lower(subregion),\n         subregion = str_replace_all(subregion, \" \", \"\"),\n         subregion = str_squish(subregion)) |&gt;\n  mutate(region = str_to_lower(region),\n         region = str_replace_all(region, \" \", \"\"))\n\n#fixing odd formating for county names in CDC data\ncovid_data_clean &lt;- covid_data |&gt;\n  select(county, state, covid.19_community_level, covid_cases_per_100k) |&gt;\n  mutate(state = str_to_lower(state),\n         state = str_replace_all(state, \" \", \"\"),\n         state = str_squish(state)) |&gt;\n  mutate(county = str_to_lower(county),\n         county = str_replace_all(county, \" \", \"\"),\n         county = str_squish(county),\n         county = str_replace_all(county, \"county\", \"\"),\n         county = str_replace_all(county, \"st.\", \"\"),\n         county = str_replace_all(county, \"city\", \"\"),\n         county = str_replace_all(county, \"muni\", \"\"),\n         county = str_replace_all(county, \"parish\", \"\"))\n\ncovid_county_level_data &lt;- covid_data_clean |&gt;\n  right_join(county_map, by =c(\"county\" = \"subregion\", \"state\" = \"region\"))\n\nWarning in right_join(covid_data_clean, county_map, by = c(county = \"subregion\", : Detected an unexpected many-to-many relationship between `x` and `y`.\nℹ Row 1 of `x` matches multiple rows in `y`.\nℹ Row 79510 of `y` matches multiple rows in `x`.\nℹ If a many-to-many relationship is expected, set `relationship =\n  \"many-to-many\"` to silence this warning.\n\ncovid_county_level_data |&gt;\n  ggplot(mapping = aes(x = long, y = lat,\n                       group = group)) +\n  geom_polygon(aes(fill = covid.19_community_level), color = \"white\", linewidth = 0.05) +\n  labs(fill = \"COVID-19 Levels \\n Per County\",\n       x = \"\",\n       y = \"\") +\n  scale_fill_manual(values = c(\"High\" = \"darkred\", \"Medium\" = \"gold\", \"Low\" = \"darkgreen\", \"NA\" = \"gray\")) +\n  coord_map() +\n  theme_void() \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nelectoral_map &lt;- election_data |&gt;\n  right_join(states_polygon, by =c(\"state\" = \"region\"))\n\nelectoral_map &lt;- electoral_map |&gt;\n  right_join(states_sf, by =c(\"state\" = \"name\"))\n\n\nelectoral_map |&gt;\n  ggplot(mapping = aes(x = long, y = lat,\n                       group = group)) +\n  geom_polygon(aes(fill = candidate_won), color = \"white\", linewidth = 0.2) +\n  labs(fill = \"Winning Candidate \\n(2024 Presidential Election)\",\n       x = \"\",\n       y = \"\") +\n  coord_map() +\n  scale_fill_manual(values = c(\"Harris\" = \"darkblue\", \"Trump\" = \"darkred\")) +\n  theme_void()\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\npal &lt;- colorFactor(c(\"darkblue\", \"darkred\"), domain = election_map_sf$candidate_won) #colorFactor used for categorical variables\n\nlibrary(htmltools)\nlibrary(glue)\n\nstr(election_map_sf$votes_harris, votes_trump)\n\n chr [1:52] \"772,412\" \"140,026\" \"1,582,860\" \"396,905\" \"9,276,179\" ...\n\n#add labels to the election_map_sf data set\nelection_map_sf &lt;- election_map_sf |&gt;\n  mutate(labels = str_c(state, \": \", format(votes_harris), \" votes Harris\", \", \", format(votes_trump), \" votes Trump\"))\n\nlabels &lt;- lapply(election_map_sf$labels, HTML)\n\nelection_map_sf &lt;- st_as_sf(election_map_sf)\n\nleaflet(election_map_sf) |&gt;\n  setView(-100, 42, 3.5) |&gt; #to view the united states\n  addTiles() |&gt;\n  addPolygons(\n    fillColor = ~pal(candidate_won),\n    weight = 1,\n    opacity = 2,\n    color = \"black\",\n    dashArray = \"2\",\n    fillOpacity = 0.7,\n    highlightOptions = highlightOptions(\n      weight = 2,\n      color = \"#FFFFFF\",\n      dashArray = \"\",\n      fillOpacity = 0.7,\n      bringToFront = TRUE),\n    label = labels,\n    labelOptions = labelOptions(\n      style = list(\"font-weight\" = \"normal\", padding = \"3px 8px\"),\n      textsize = \"15px\",\n      direction = \"auto\")) |&gt;\n  addLegend(pal = pal, values = ~candidate_won, opacity = 0.7, title = \"Winning Candidate\",\n    position = \"topright\")\n\nWarning in sf::st_is_longlat(x): bounding box has potentially an invalid value\nrange for longlat data"
  },
  {
    "objectID": "mini_project_one.html#covid-19-maps",
    "href": "mini_project_one.html#covid-19-maps",
    "title": "01 Mini Project",
    "section": "",
    "text": "library(tidyverse)\n\n── Attaching core tidyverse packages ──────────────────────── tidyverse 2.0.0 ──\n✔ dplyr     1.1.4     ✔ readr     2.1.5\n✔ forcats   1.0.0     ✔ stringr   1.5.1\n✔ ggplot2   3.5.1     ✔ tibble    3.2.1\n✔ lubridate 1.9.4     ✔ tidyr     1.3.1\n✔ purrr     1.0.4     \n── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──\n✖ dplyr::filter() masks stats::filter()\n✖ dplyr::lag()    masks stats::lag()\nℹ Use the conflicted package (&lt;http://conflicted.r-lib.org/&gt;) to force all conflicts to become errors\n\nlibrary(mdsr)\nlibrary(maps)\n\n\nAttaching package: 'maps'\n\nThe following object is masked from 'package:purrr':\n\n    map\n\nlibrary(viridis)\n\nLoading required package: viridisLite\n\nAttaching package: 'viridis'\n\nThe following object is masked from 'package:maps':\n\n    unemp\n\nlibrary(lubridate)\nlibrary(leaflet)\nlibrary(sf)\n\nLinking to GEOS 3.11.0, GDAL 3.5.3, PROJ 9.1.0; sf_use_s2() is TRUE\n\nlibrary(RColorBrewer)\n\n#data set from the CDC\ncdc_data &lt;- read.csv(\"~/Downloads/CLASSES/SDS264/01_United_States_COVID-19_Community_Levels_by_County_20250216.csv\")\n\n\nstates_polygon &lt;- as_tibble(map_data(\"state\")) |&gt;\n  select(region, group, order, lat, long)\n\nstates_sf &lt;- read_sf(\"https://rstudio.github.io/leaflet/json/us-states.geojson\") |&gt;\n  select(name, geometry)\n\n\n#join covid data with map data\ncovid_map &lt;- covid_state_level_data |&gt;\n  right_join(states_polygon, by =c(\"state\" = \"region\"))\n\ncovid_map &lt;- covid_map |&gt;\n  right_join(states_sf, by =c(\"state\" = \"name\"))\n\n\n\n\ncovid_map |&gt;\n  ggplot(mapping = aes(x = long, y = lat,\n                       group = group)) +\n  geom_polygon(aes(fill = covid_cases_per_100k), color = \"white\", linewidth = 0.2) +\n  labs(fill = \"Average Covid Cases \\nin Per 100k\",\n       x = \"\",\n       y = \"\") +\n  coord_map() +\n  theme_void() +\n  scale_fill_viridis(option = \"mako\", direction = -1)\n\n\n\n\n\n\n\n\n\n\n\n\nstates &lt;- read_sf(\"https://rstudio.github.io/leaflet/json/us-states.geojson\") \nclass(states)\n\n[1] \"sf\"         \"tbl_df\"     \"tbl\"        \"data.frame\"\n\nstates &lt;- states |&gt;\n  mutate(name = str_to_lower(name),\n         name = str_replace_all(name, \" \", \"\"))\n\n\n\n\n\n\n\n\n\n\n\nbins &lt;- c(0, 10, 20, 30, 40, 50, 60, 70, Inf)\npal &lt;- colorBin(\"Blues\", domain = state_plotting_covid_sf$covid_cases_per_100k, bins = bins)\n\nlibrary(htmltools)\nlibrary(glue)\n\nstr(state_plotting_covid_sf$covid_cases_per_100k)\n\n num [1:50] 27.5 61.9 22.7 28 20.4 ...\n\n#add labels to the state_plotting_covid_sf\nstate_plotting_sf_labels &lt;- state_plotting_covid_sf |&gt;\n  mutate(labels = str_c(state, \": \", format(round(covid_cases_per_100k, 1)), \" cases / 100k people\"))\n\nlabels &lt;- lapply(state_plotting_sf_labels$labels, HTML)\n\nstate_plotting_covid_sf &lt;- st_as_sf(state_plotting_covid_sf)\n\nleaflet(state_plotting_covid_sf) |&gt;\n  setView(-100, 42, 3.5) |&gt; #to view the united states\n  addTiles() |&gt;\n  addPolygons(\n    fillColor = ~pal(covid_cases_per_100k),\n    weight = 1,\n    opacity = 2,\n    color = \"black\",\n    dashArray = \"2\",\n    fillOpacity = 0.7,\n    highlightOptions = highlightOptions(\n      weight = 2,\n      color = \"#FFFFFF\",\n      dashArray = \"\",\n      fillOpacity = 0.7,\n      bringToFront = TRUE),\n    label = labels,\n    labelOptions = labelOptions(\n      style = list(\"font-weight\" = \"normal\", padding = \"3px 8px\"),\n      textsize = \"15px\",\n      direction = \"auto\")) |&gt;\n  addLegend(pal = pal, values = ~covid_cases_per_100k, opacity = 0.7, title = \"Cases per 100k\",\n    position = \"topright\")\n\n\n\n\n\n\n\n\n\ncounty_map &lt;- map_data(\"county\") |&gt;\n  mutate(subregion = str_to_lower(subregion),\n         subregion = str_replace_all(subregion, \" \", \"\"),\n         subregion = str_squish(subregion)) |&gt;\n  mutate(region = str_to_lower(region),\n         region = str_replace_all(region, \" \", \"\"))\n\n#fixing odd formating for county names in CDC data\ncovid_data_clean &lt;- covid_data |&gt;\n  select(county, state, covid.19_community_level, covid_cases_per_100k) |&gt;\n  mutate(state = str_to_lower(state),\n         state = str_replace_all(state, \" \", \"\"),\n         state = str_squish(state)) |&gt;\n  mutate(county = str_to_lower(county),\n         county = str_replace_all(county, \" \", \"\"),\n         county = str_squish(county),\n         county = str_replace_all(county, \"county\", \"\"),\n         county = str_replace_all(county, \"st.\", \"\"),\n         county = str_replace_all(county, \"city\", \"\"),\n         county = str_replace_all(county, \"muni\", \"\"),\n         county = str_replace_all(county, \"parish\", \"\"))\n\ncovid_county_level_data &lt;- covid_data_clean |&gt;\n  right_join(county_map, by =c(\"county\" = \"subregion\", \"state\" = \"region\"))\n\nWarning in right_join(covid_data_clean, county_map, by = c(county = \"subregion\", : Detected an unexpected many-to-many relationship between `x` and `y`.\nℹ Row 1 of `x` matches multiple rows in `y`.\nℹ Row 79510 of `y` matches multiple rows in `x`.\nℹ If a many-to-many relationship is expected, set `relationship =\n  \"many-to-many\"` to silence this warning.\n\ncovid_county_level_data |&gt;\n  ggplot(mapping = aes(x = long, y = lat,\n                       group = group)) +\n  geom_polygon(aes(fill = covid.19_community_level), color = \"white\", linewidth = 0.05) +\n  labs(fill = \"COVID-19 Levels \\n Per County\",\n       x = \"\",\n       y = \"\") +\n  scale_fill_manual(values = c(\"High\" = \"darkred\", \"Medium\" = \"gold\", \"Low\" = \"darkgreen\", \"NA\" = \"gray\")) +\n  coord_map() +\n  theme_void()"
  },
  {
    "objectID": "mini_project_one.html#election-maps",
    "href": "mini_project_one.html#election-maps",
    "title": "01 Mini Project",
    "section": "",
    "text": "electoral_map &lt;- election_data |&gt;\n  right_join(states_polygon, by =c(\"state\" = \"region\"))\n\nelectoral_map &lt;- electoral_map |&gt;\n  right_join(states_sf, by =c(\"state\" = \"name\"))\n\n\nelectoral_map |&gt;\n  ggplot(mapping = aes(x = long, y = lat,\n                       group = group)) +\n  geom_polygon(aes(fill = candidate_won), color = \"white\", linewidth = 0.2) +\n  labs(fill = \"Winning Candidate \\n(2024 Presidential Election)\",\n       x = \"\",\n       y = \"\") +\n  coord_map() +\n  scale_fill_manual(values = c(\"Harris\" = \"darkblue\", \"Trump\" = \"darkred\")) +\n  theme_void()\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\npal &lt;- colorFactor(c(\"darkblue\", \"darkred\"), domain = election_map_sf$candidate_won) #colorFactor used for categorical variables\n\nlibrary(htmltools)\nlibrary(glue)\n\nstr(election_map_sf$votes_harris, votes_trump)\n\n chr [1:52] \"772,412\" \"140,026\" \"1,582,860\" \"396,905\" \"9,276,179\" ...\n\n#add labels to the election_map_sf data set\nelection_map_sf &lt;- election_map_sf |&gt;\n  mutate(labels = str_c(state, \": \", format(votes_harris), \" votes Harris\", \", \", format(votes_trump), \" votes Trump\"))\n\nlabels &lt;- lapply(election_map_sf$labels, HTML)\n\nelection_map_sf &lt;- st_as_sf(election_map_sf)\n\nleaflet(election_map_sf) |&gt;\n  setView(-100, 42, 3.5) |&gt; #to view the united states\n  addTiles() |&gt;\n  addPolygons(\n    fillColor = ~pal(candidate_won),\n    weight = 1,\n    opacity = 2,\n    color = \"black\",\n    dashArray = \"2\",\n    fillOpacity = 0.7,\n    highlightOptions = highlightOptions(\n      weight = 2,\n      color = \"#FFFFFF\",\n      dashArray = \"\",\n      fillOpacity = 0.7,\n      bringToFront = TRUE),\n    label = labels,\n    labelOptions = labelOptions(\n      style = list(\"font-weight\" = \"normal\", padding = \"3px 8px\"),\n      textsize = \"15px\",\n      direction = \"auto\")) |&gt;\n  addLegend(pal = pal, values = ~candidate_won, opacity = 0.7, title = \"Winning Candidate\",\n    position = \"topright\")\n\nWarning in sf::st_is_longlat(x): bounding box has potentially an invalid value\nrange for longlat data"
  }
]